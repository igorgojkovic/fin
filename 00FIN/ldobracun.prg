PROCEDURE LDOBRACUN 
parameters MCENARADA,MGRUPA,AOBRNAKNADE,MOBRUK
PUSH KEY CLEAR

*MC = CENA RADA
SELECT LDPARAM
MPROCNOC=PROCNOC
MPROCPROD=PROCPROD
MPROCNED=PROCNED
MPROCBOL=PROCBOL
MPROCPRAZ=PROCPRAZ
MPROCPLAC=PROCPLAC
MPROCSUS=PROCSUS
MPROCMIN=PROCMIN
MCZAKON=CZAKON
MMESEC=MESEC
MNAZMES=NAZMES
MISPLATA=ISPLATA
MPROSBRUTO=PROSBRUTO
MSRAZPOR=SRAZPOR
MMINNAC=MINNAC
MSTARTKOEF=EKOEFS
EDOPF=DOPPF1+DOPZF1+DOPNF1
MGODINA=GODINA
msolporod1=solporod1
msolporod2=solporod2
msolpordo1=solpordo1
msolpordo2=solpordo2
msolproc1=solproc1
msolproc2=solproc2
   MBKPROC=BKPROC
   MBKZASTITA=BKZASTITA
   mnakpos=nakpos
   PUBLIC MDECIMALE,MNEOPOREZ,MDEC,MNEOPOREZP
   MDECIMALE=DECIMALE
   MNEOPOREZ=NEOPOREZ
   MNEOPOREZP=NEOPOREZP
    
   IF MDECIMALE=' '
      MDEC=0
   ELSE
      MDEC=2
   ENDIF      

SELECT LD
REPLACE GODINA WITH MGODINA
IF LDRAD.GRUPA=MGRUPA.OR.MGRUPA=0
   mevidbroj=ldrad.evidbroj
   mc=MCENARADA
   IF MSTARTKOEF<>0
      SB=ROUND(LDRAD.STARTBOD*MSTARTKOEF/MCZAKON,8)
      SBMIN=ROUND(LDRAD.STARTBOD*MSTARTKOEF,8)
   ELSE
      SB=ROUND(LDRAD.STARTBOD/MCZAKON,8)
      SBMIN=ROUND(LDRAD.STARTBOD,8)
   ENDIF
   
*   SBMIN=ROUND(LDRAD.STARTBOD,8)
   replace evidbroj WITH mevidbroj
   replace dinVR with ROUND(casuc*SB*MC,mdec)
   replace dinuc with ROUND(casuc*SB*MC,mdec)
   replace dinNOC with ROUND(casNOC*SB*MC*MPROCNOC/100,mdec)
   replace dinPROD with ROUND(casPROD*SB*MC*MPROCPROD/100,mdec)
   replace dinRADNAP with ROUND(casRADNAP*SB*MC*MPROCPRAZ/100,mdec)
   replace dinNED with ROUND(casNED*SB*MC*MPROCNED/100,mdec)
   replace dinDOR with ROUND(casDOR*SB*MC,mdec)
   replace dinSL with ROUND(cSLPUT*SB,mdec)

   IF MOBRUK='D'
*      SET STEP ON 
      MFIKSNA1=ROUND((LDRAD.STARTBOD)*100/(100+EDOPF),mdec)
      MFIKSNA2=MFIKSNA1-TOPLI-REGRES
      MFIKSNA3=ROUND(MFIKSNA2*100/(100+(MPROCMIN*LDRAD.STAZ)),mdec)
      SB2=ROUND(MFIKSNA3/MCZAKON,8)
      
      replace dinVR with ROUND(casVR*SB2,mdec)
      replace dinuc with ROUND(casuc*SB2,mdec)
      
      replace dinPRAZ with ROUND(casPRAZ*SB2,mdec)
      replace dinNOC with ROUND(casNOC*SB2*MPROCNOC/100,mdec)
      replace dinPROD with ROUND(casPROD*SB2*MPROCPROD/100,mdec)
      replace dinRADNAP with ROUND(casRADNAP*SB2*MPROCPRAZ/100,mdec)
      replace dinNED with ROUND(casNED*SB2*MPROCNED/100,mdec)

      replace dinBOL with ROUND(casBOL*SB2*MPROCBOL/100,mdec)
      replace dinBOL2 with ROUND(casBOL2*SB2,mdec)
      replace dinPLAC with ROUND(casPLAC*SB2*MPROCPLAC/100,mdec)
      replace dinPLAC2 with ROUND(casPLAC2*SB2,mdec)
      replace dinGOD with ROUND(casGOD*SB2,mdec)
      replace dinVV with ROUND(casVV*SB2,mdec)
      replace dinDOR with ROUND(casDOR*SB2,mdec)
      replace dinSL with ROUND(cSLPUT*SB2,mdec)

   ELSE   

   IF AOBRNAKNADE='D'
      replace dinPRAZ with ROUND(casPRAZ*SB*MC,mdec)
      replace dinBOL with ROUND(casBOL*SB*MC*MPROCBOL/100,mdec)
      replace dinBOL2 with ROUND(casBOL2*SB*MC,mdec)
      replace dinPLAC with ROUND(casPLAC*SB*MC*MPROCPLAC/100,mdec)
      replace dinPLAC2 with ROUND(casPLAC2*SB*MC,mdec)
      replace dinGOD with ROUND(casGOD*SB*MC,mdec)
      replace dinVV with ROUND(casVV*SB*MC,mdec)
      REPLACE DINSUS WITH ROUND(CASSUS*SB*MC*MPROCSUS/100,mdec)       
*      replace dinDOR with ROUND(casDOR*SB*MC,MDEC)
   ELSE
*      REPLACE DINPRAZ WITH 0
*      REPLACE DINBOL WITH 0
*      REPLACE DINBOL2 WITH 0
*      REPLACE DINPLAC WITH 0
*      REPLACE DINPLAC2 WITH 0
*      REPLACE DINGOD WITH 0
*      REPLACE DINVV WITH 0
*      REPLACE DINDOR WITH 0
   ENDIF
   
   ENDIF
   REPLACE DIN1 WITH ROUND(CAS1*SB*MC,mdec)
   REPLACE DIN2 WITH ROUND(CAS2*SB*MC,mdec)
   REPLACE DIN3 WITH ROUND(CAS3*SB*MC,mdec)
   REPLACE DINSUS WITH ROUND(CASSUS*SB*MC*MPROCSUS/100,MDEC) 
   MMIN=DINUC+DINNOC+DINPROD+DINRADNAP+DINPRAZ+DINNED+DINBOL+DINBOL2+DINPLAC+DINPLAC2+DINGOD+DINVV+DINDOR+DINSL+DIN1+DIN2+DIN3+DINSUS
   *replace dinMIN with ROUND(SBMIN*MC*MPROCMIN*LDRAD.STAZ/100,MDEC)
   DO CASE
   CASE MMINNAC=0
      replace dinMIN with ROUND(DINUC*MPROCMIN*LDRAD.STAZ/100,mdec)
   CASE MMINNAC=1
      replace dinMIN with ROUND(MMIN*MPROCMIN*LDRAD.STAZ/100,mdec)
   CASE MMINNAC=2
      MMIN=DINUC+DINNOC+DINPROD+DINRADNAP+DINNED+DIN1+DIN2+DIN3+DINSUS+DINDOR+DINSL
      replace dinMIN with ROUND(MMIN*MPROCMIN*LDRAD.STAZ/100,mdec)
   ENDCASE

REPLACE BENPROC WITH LDRAD.BENPROC
REPLACE GRUPA WITH LDRAD.GRUPA
REPLACE GRUPA1 WITH LDRAD.GRUPA1
REPLACE MTR WITH LDRAD.MTR
REPLACE CENARADA WITH MC
REPLACE MESEC WITH MMESEC
REPLACE NAZMES WITH MNAZMES

DO SABERICAS
DO SABERIDIN
DO OBRACSTIM
DO SABERIDOD
DO SABERINAK
DO SABERIBRUTO
*----------OBRACUN DOTACIJE-------------------
do obracsoc
*SET STEP ON 
replace bkumanj WITH 0
IF mbkproc>0.or.mbkzastita>0
   
   *IF casuk>mczakon
   *   mcasuk=mczakon
   *ELSE
   *   mcasuk=casuk
   *endif      
   *mnetoprovera=ROUND(neto*MCZAKON/mCASUK,2)
   *IF mnetoprovera>mbkzastita
      DO obracsocumanjenje
   *endif   
endif
DO obracben
do obracsocU
DO obracsolpor
DO OBRACOB
DO OBRACKOM
DO SABERIOB
ENDIF
POP KEY
ENDPROC

PROCEDURE SABERICAS
PUSH KEY CLEAR
IF MNAKPOS<>'D'
REPLACE CASUK WITH CASUC+CASPRAZ+CASBOL+CASBOL2+CASPLAC+CASPLAC2+CASGOD+CASDOR+CSLPUT;
                   +CAS1+CAS2+CAS3+CASRADNAP+CASNEPLAC
ELSE
REPLACE CASUK WITH CASUC+CASPRAZ+CASBOL+CASBOL2+CASPLAC+CASPLAC2+CASGOD+CASDOR+CSLPUT;
                   +CAS1+CAS2+CAS3+CASRADNAP+CASNEPLAC+CASNOC+CASPROD+CASNED

ENDIF                   
POP KEY
ENDPROC

PROCEDURE SABERIDIN
PUSH KEY CLEAR

REPLACE DINUK WITH DINUC+DINNOC+DINPROD+DINRADNAP+DINNED+DINPRAZ+DINBOL+DINBOL2+DINPLAC+DINPLAC2+DINGOD+DINDOR+DINSL;
                   +DIN1+DIN2+DIN3+DINMIN

POP KEY
                   
ENDPROC

PROCEDURE OBRACSTIM
PUSH KEY CLEAR

   REPLACE STIM1 WITH ROUND((DINUK-DINPRAZ-DINBOL-DINBOL2-DINPLAC-DINPLAC2-DINGOD)*STIM1PROC/100,mdec)
   REPLACE STIM2 WITH ROUND((DINUK-DINPRAZ-DINBOL-DINBOL2-DINPLAC-DINPLAC2-DINGOD)*STIM2PROC/100,mdec)
   REPLACE STIM3 WITH ROUND((DINUK-DINPRAZ-DINBOL-DINBOL2-DINPLAC-DINPLAC2-DINGOD)*STIM3PROC/100,mdec)
POP KEY
ENDPROC

PROCEDURE SABERIDOD
PUSH KEY CLEAR
   REPLACE LDODACI WITH DINNOC+DINPROD+DINRADNAP+DINNED+dinmin+TOPLI+REGRES+TERENSKI
POP KEY
ENDPROC

   
PROCEDURE SABERINAK
PUSH KEY CLEAR

   REPLACE NAKNADE WITH DINPRAZ+DINBOL+DINBOL2+DINPLAC+DINPLAC2+DINGOD
POP KEY
ENDPROC

PROCEDURE SABERIBRUTO
PUSH KEY CLEAR

   REPLACE BRUTO WITH ROUND(DINUK+STIM1+STIM2+STIM3+TOPLI+REGRES+TERENSKI+FIKSNA+DOTACIJA+DINSUS,2)
   SELECT LDPARAM
   MISPLATA=ISPLATA
   SELECT LD
*   IF MISPLATA=1
*      REPLACE PORFONDZ WITH ROUND(BRUTO*LDRAD->FONDZ/100,MDEC)
*   ELSE
*      REPLACE PORFONDZ WITH 0
*   ENDIF
POP KEY
ENDPROC



PROCEDURE OBRACOB
PUSH KEY CLEAR

REPLACE KASA WITH LDRAD->KASA
REPLACE KASARATA WITH LDRAD->KASARATA
REPLACE SAMODOPR WITH ROUND(NETO*LDSAMOD->SAMOPROC/100,MDEC)
REPLACE SINDIKAT1 WITH ROUND(NETO*LDRAD->SIND1PROC/100,MDEC)
REPLACE SINDIKAT2 WITH ROUND(NETO*LDRAD->SIND2PROC/100,MDEC)
*REPLACE dnevnica WITH ROUND(NETO*LDRAD->dnevproc/100,MDEC)
REPLACE SOLIDARN WITH ROUND(NETO*LDRAD->SOLPROC/100,MDEC)
REPLACE ALIMENT WITH ROUND(NETO*LDRAD->ALIMPROC/100,MDEC)
POP KEY
ENDPROC


PROCEDURE SABERIOB
PUSH KEY CLEAR

   REPLACE UKOBUST WITH KREDITI+KREDITIA+AKONTAC+PREVOZ+ALIMENT+KASA+KASARATA+SAMODOPR+SINDIKAT1+SINDIKAT2;
   +SOLIDARN+OBUST1+OBUST2+OBUST3+OBUST4+OBUST5+OBUST6+OBUSTTO+SOLPOR
   REPLACE ZAISPLATU WITH ROUND(NETO-UKOBUST+NETOPREV,mdec)
POP KEY
ENDPROC



PROCEDURE OBRACSOCU
PUSH KEY CLEAR

   MDOPPFU=ROUND(DOPPF*DOPUMANJ/100,MDEC)
   MDOPZFU=ROUND(DOPZF*DOPUMANJ/100,MDEC)
   MDOPNFU=ROUND(DOPNF*DOPUMANJ/100,MDEC)
   REPLACE DOPPFU WITH MDOPPFU
   REPLACE DOPZFU WITH MDOPZFU
   REPLACE DOPNFU WITH MDOPNFU
   REPLACE DOPPF WITH DOPPF-MDOPPFU
   REPLACE DOPZF WITH DOPZF-MDOPZFU
   REPLACE DOPNF WITH DOPNF-MDOPNFU
   REPLACE DOPSOCF WITH DOPPF+DOPZF+DOPNF
*   BROW
   IF PIOUMANJR<>0
      REPLACE DOPPRU WITH ROUND(DOPPR*PIOUMANJR/100,MDEC)
   ENDIF            

   IF PIOUMANJF<>0
      REPLACE DOPPFU WITH ROUND(DOPPF*PIOUMANJF/100,MDEC)
   ENDIF            
   POP KEY
ENDPROC


PROCEDURE OBRACKOM
SELECT LDPARAM
AKOMORAJ=KOMORAJ
AKOMORAS=KOMORAS
AKOMORAR=KOMORAR
SELECT LD
REPLACE KOMORAJD WITH ROUND(BRUTO*AKOMORAJ/100,2)
REPLACE KOMORASD WITH ROUND(BRUTO*AKOMORAS/100,2)
REPLACE KOMORARD WITH ROUND(BRUTO*AKOMORAR/100,2)
ENDPROC


PROCEDURE obracben
   mmdinbol=dinbol+dinbol2
   REPLACE BENDIN WITH ROUND((BRUTO-mmdinbol)*BENPROC/100,MDEC)
endproc


PROCEDURE obracbenn
   mmdinbol=ROUND((dinbol+dinbol2)/0.701,2)
   REPLACE BENDIN WITH ROUND((BRUTO-mmdinbol)*BENPROC/100,MDEC)
ENDPROC


PROCEDURE obracsolpor
   replace neto2 WITH 0
   replace solpor WITH 0
   mneto2=0
   msolpor1=0
   msolpor2=0
   IF msolporod1>0
      IF (neto+netoost)>msolporod1.and.(neto+netoost)<=msolpordo1
         msolpor1=ROUND(msolproc1*(neto-msolporod1)/100,2)
      ENDIF
      IF (neto+netoost)>msolporod2
         msolpor1=ROUND(msolproc1*(msolpordo1-msolporod1)/100,2)
         msolpor2=ROUND(msolproc2*(neto+netoost-msolpordo1)/100,2)
      ENDIF
      replace solpor WITH msolpor1+msolpor2
      replace neto2 WITH neto-solpor
   endif
endproc
