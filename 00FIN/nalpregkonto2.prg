PARAMETERS AKONTO,ADAT0,ADAT1,ADOK,AMP,AMTR,AOPIS,ASALDAN,ASALDANPAD,ASALMES,ASVEDUGPOT,ASORTVRED,ASLICNE,ASDIN
PUSH KEY CLEAR
MKONTO=AKONTO
MDAT0=ADAT0
MDAT1=ADAT1
MDOK=ADOK
MMP=AMP
MMTR=AMTR
MAOPIS=ALLTRIM(AOPIS)
MLOPIS=LEN(MAOPIS)
MSALDAN=ASALDAN
MSALDANPAD=ASALDANPAD
MSALMES=ASALMES
MSVEDUGPOT=ASVEDUGPOT
MSORTVRED=ASORTVRED
MSLICNE=ASLICNE
MSDIN=ASDIN
SET EXACT OFF
*SET STEP ON 
MKLEN=LEN(ALLTRIM(MKONTO))

SELECT DATUMI
REPLACE DAT0 WITH MDAT0
REPLACE DAT1 WITH MDAT1
SELECT NAL
SET ORDER TO 4
IF MKLEN<10
SELECT KONTO,BRNAL,DEVDUG,DUG,POT,UKUPNO_d,ukupno_p,BRRAC,DATDOK,SALDO,DOK,MP,MTR,OPIS,DEVPOT FROM NAL WHERE (SUBSTR(KONTO,1,MKLEN)=ALLTRIM(MKONTO));
                         .AND.(DATDOK<MDAT0);
                         .AND.(DOK=MDOK.OR.MDOK=SPACE(3));
                         .AND.(MP=MMP.OR.MMP=SPACE(2));
                         .AND.(MTR=MMTR.OR.MMTR=0);
                         .AND.(MAOPIS=SUBSTR(OPIS,1,MLOPIS).OR.MAOPIS=SPACE(30));
                         INTO CURSOR KOCKA readwrite
                     *    USE
                         
                         
SELECT KONTO,BRNAL,DEVDUG,DUG,UKUPNO_D,POt,UKUPNO_P,BRRAC,DATDOK,SALDO,DOK,MP,MTR,OPIS FROM NAL WHERE (SUBSTR(KONTO,1,MKLEN)=ALLTRIM(MKONTO));
                         .AND.(DATDOK>=MDAT0.AND.DATDOK<=MDAT1);
                         .AND.(DOK=MDOK.OR.MDOK=SPACE(3));
                         .AND.(MP=MMP.OR.MMP=SPACE(2));
                         .AND.(MTR=MMTR.OR.MMTR=0);
                         .AND.(MAOPIS=SUBSTR(OPIS,1,MLOPIS).OR.MAOPIS=SPACE(30));
                         INTO CURSOR KOCKA2 READWRITE ORDER BY DATDOK
                      *   USE
ELSE
   SELECT KONTO,BRNAL,DEVDUG,DUG,POT,UKUPNO_d,ukupno_p,BRRAC,DATDOK,SALDO,DOK,MP,MTR,OPIS,DEVPOT FROM NAL WHERE KONTO=MKONTO;
                         .AND.(DATDOK<MDAT0);
                         .AND.(DOK=MDOK.OR.MDOK=SPACE(3));
                         .AND.(MP=MMP.OR.MMP=SPACE(2));
                         .AND.(MTR=MMTR.OR.MMTR=0);
                         .AND.(MAOPIS=SUBSTR(OPIS,1,MLOPIS).OR.MAOPIS=SPACE(30));
                         INTO CURSOR KOCKA readwrite
                     *    USE
                         
                         
SELECT KONTO,BRNAL,DEVDUG,DUG,UKUPNO_D,POt,UKUPNO_P,BRRAC,DATDOK,SALDO,DOK,MP,MTR,OPIS,DEVPOT FROM NAL WHERE KONTO=MKONTO;
                         .AND.(DATDOK>=MDAT0.AND.DATDOK<=MDAT1);
                         .AND.(DOK=MDOK.OR.MDOK=SPACE(3));
                         .AND.(MP=MMP.OR.MMP=SPACE(2));
                         .AND.(MTR=MMTR.OR.MMTR=0);
                         .AND.(MAOPIS=SUBSTR(OPIS,1,MLOPIS).OR.MAOPIS=SPACE(30));
                         INTO CURSOR KOCKA2 READWRITE ORDER BY DATDOK
                      *   USE




ENDIF                      
SELECT KOCKA2
REPLACE ALL UKUPNO_D WITH 0
REPLACE ALL UKUPNO_P WITH 0
*USE
SELECT KOCKA
REPLACE ALL DEVDUG WITH 1
INDEX ON DEVDUG TAG DEV
INDEX ON DATDOK TAG DATDOK
SET ORDER TO 1
TOTAL ON DEVDUG TO &KKOCKA3
ZAP
APPEND FROM &KKOCKA3
REPLACE UKUPNO_D WITH DUG
REPLACE UKUPNO_P WITH POT
REPLACE BRNAL WITH SPACE(6)
REPLACE DOK WITH ' '
REPLACE OPIS WITH ' '
REPLACE MP WITH ''
REPLACE MTR WITH 0
PUBLIC APDUG,APPOT,ADUG,APOT
*SET STEP ON 
APDUG=UKUPNO_D
APPOT=UKUPNO_P
replace devdug WITH 0
SELECT kocka2
GO top
DO while.not.eof()
   SCATTER NAME polja
   SELECT kocka
   APPEND BLANK
   GATHER NAME polja
   SELECT kocka2
   SKIP
enddo   
*APPEND FROM &KKOCKA2
SELECT kocka2
USE
SELECT kocka
COPY TO &KKOCKA5
USE
DO IDEL WITH (KKOCKAX5)
USE &KKOCKA5 IN 0 ALIAS KOCKA EXCLU
SELECT KOCKA
INDEX ON DEVDUG TAG DEV
INDEX ON DATDOK TAG DATDOK
SET ORDER TO 1
GO top
IF MSALMES<>'D'

IF MSALDAN<>'D'   
   SELECT KOCKA
   GO TOP
   IF MSVEDUGPOT<>'S'
      IF MSVEDUGPOT='P'
         DELETE ALL FOR DUG<>0.OR.DEVDUG<>0
         PACK
      ELSE
         DELETE ALL FOR POT<>0.OR.DEVPOT<>0
         PACK
      ENDIF   
   ENDIF
   IF MSORTVRED='D'
      SELECT KOCKA
      GO TOP
      REPLACE ALL BRRAC WITH 'P0' FOR POT>0
      REPLACE ALL BRRAC WITH 'P1' FOR POT<0
      REPLACE ALL DUG WITH POT FOR POT>0
      REPLACE ALL DUG WITH -POT FOR POT<0
      SORT ON DUG TO &KKOCKA3 DESCEND
      ZAP
      APPEND FROM &KKOCKA3
      REPLACE ALL POT WITH DUG FOR BRRAC='P0'
      REPLACE ALL POT WITH -DUG FOR BRRAC='P1'
      REPLACE ALL DUG WITH 0 FOR BRRAC='P0'
      REPLACE ALL DUG WITH 0 FOR BRRAC='P1'
      SET ORDER TO 
      GO TOP      
   ENDIF   
   IF MSLICNE='D'
      *------TRAZIMO SLICNE STAVKE-------
      SELECT KOCKA
      GO TOP
      DO WHILE.NOT.EOF()
         MDUG=INT(DUG)
         MREC=RECNO()
         IF MDUG<>0
            LOCATE FOR INT(POT)>=MDUG-5.AND.INT(POT)<=MDUG+5
            IF FOUND()
               REPLACE POT WITH 0
               GOTO MREC
               REPLACE DUG WITH 0
            ENDIF      
            
         ENDIF  
         GOTO MREC
         SKIP
      ENDDO   
      DELETE ALL FOR DUG=0.AND.POT=0
      PACK
      GO TOP      
      DO WHILE.NOT.EOF()
         MPOT=INT(POT)
         MREC=RECNO()
         IF MPOT>0
            LOCATE FOR POT<0.AND.(INT(ABS(POT))>=MPOT-MSDIN.AND.INT(ABS(POT))<=MPOT+MSDIN)
            IF FOUND()
               REPLACE POT WITH 0
               GOTO MREC
               REPLACE POT WITH 0
           ENDIF      
         ENDIF  
         GOTO MREC
         SKIP
      ENDDO   
      DELETE ALL FOR DUG=0.AND.POT=0
      PACK
   ENDIF
   SELECT KOCKA
   SET ORDER TO 2
   GO TOP
   MSALDO=0
   MDUG=0
   MPOT=0
   DO WHILE.NOT.EOF()
      MSALDO=MSALDO+DUG-POT
      REPLACE SALDO WITH MSALDO
      MDUG=MDUG+DUG
      MPOT=MPOT+POT
      SKIP
   ENDDO   
   ADUG=MDUG
   APOT=MPOT
   SET ORDER TO 
   GO TOP
   SET RELATION TO KONTO INTO KONTO ADDITIVE
   PUBLIC ANAZIV
   ANAZIV=KONTO.NAZIV
   **REPORTPOGLED('konto')
   *REPORT FORM KONTO  PREVIEW 
   mfile='KONTO'
   uslov=""
   DO printer_bullzip WITH mdata02,mfile,uslov
   
   SELECT KOCKA
   USE
ELSE
   DO IDEL WITH (KKOCKAX3)
   SELECT KOCKA
   SET ORDER TO 2
   INDEX ON DTOS(DATDOK) TAG DATDOK
   TOTAL ON DTOS(DATDOK) TO &KKOCKA3 FIELDS DUG,POT
   ZAP
   APPEND FROM &KKOCKA3
   SELECT KOCKA
   GO TOP
   MDUG=0
   MPOT=0
   IF MSALDANPAD<>'D' 
      DO WHILE.NOT.EOF()
         REPLACE SALDO WITH DUG-POT
         MDUG=MDUG+DUG
         MPOT=MPOT+POT
         SKIP
      ENDDO   
   ELSE
      DO WHILE.NOT.EOF()
         MDUG=MDUG+DUG
         MPOT=MPOT+POT
         REPLACE SALDO WITH MDUG-MPOT
         SKIP
      ENDDO   
   ENDIF
   ADUG=MDUG
   APOT=MPOT
   GO TOP
   SET RELATION TO KONTO INTO KONTO ADDITIVE   
   PUBLIC ANAZIV
   ANAZIV=KONTO.NAZIV
   *REPORTPOGLED('konto')
   *REPORT FORM KONTO PREVIEW 
   mfile='KONTO'
   uslov=""
   DO printer_bullzip WITH mdata02,mfile,uslov
   
   SELECT KOCKA
   USE
ENDIF  

ELSE
   DO IDEL WITH (KKOCKAX3)
   SELECT KOCKA
   SET ORDER TO 2
   INDEX ON MONTH(DATDOK) TAG DATDOK
   TOTAL ON MONTH(DATDOK) TO &KKOCKA3 FIELDS DUG,POT
   ZAP
   APPEND FROM &KKOCKA3
   SELECT KOCKA
   GO TOP
   MDUG=0
   MPOT=0
   DO WHILE.NOT.EOF()
      REPLACE SALDO WITH DUG-POT
      MDUG=MDUG+DUG
      MPOT=MPOT+POT
      SKIP
   ENDDO   
   ADUG=MDUG
   APOT=MPOT
   GO TOP
   SET RELATION TO KONTO INTO KONTO ADDITIVE   
   PUBLIC ANAZIV
   ANAZIV=KONTO.NAZIV
   *REPORTPOGLED('konto')
   *REPORT FORM KONTO PREVIEW 
   mfile='KONTO'
   uslov=""
   DO printer_bullzip WITH mdata02,mfile,uslov
   
   SELECT KOCKA
   USE
ENDIF
   SELECT NAL

SET EXACT ON                                        
POP KEY